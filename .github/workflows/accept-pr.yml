name: accept-pr

on:
  issue_comment:
    types:
      - created

jobs:
  rebase:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      OWNER: ${{ github.repository_owner }}
      REPO: ${{ github.event.repository.name }}
      PR_NUMBER: ${{ github.event.issue.number }} 
    name: accept-pr
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.pull_request && github.event.comment.body == '/accept'}}
    steps:
      - name: Get PR detail       
        run: |
            gh api repos/"${OWNER}"/"${REPO}"/pulls/"${PR_NUMBER}" > pr_detail.json
            echo "PR_NUMBER=${PR_NUMBER}" >> $GITHUB_ENV
            echo "HEAD_REF=$(jq -rc .head.ref pr_detail.json)" >> $GITHUB_ENV
            echo "BASE_REF=$(jq -rc .base.ref pr_detail.json)" 
            echo "PR_STATE=$(jq -rc .state pr_detail.json)" >> $GITHUB_ENV
            echo "PR_LOCKED=$(jq -rc .locked pr_detail.json)" >> $GITHUB_ENV
            echo "PR_DRAFT=$(jq -rc .draft pr_detail.json)" >> $GITHUB_ENV
            echo "PR_MERGEABLE=$(jq -rc .mergeable pr_detail.json)" >> $GITHUB_ENV
      - name: check vars
        run: |
            echo "env.HEAD_REF=${{ env.HEAD_REF }}"
            echo "env.BASE_REF=${{ env.BASE_REF }}"
            echo "env.PR_STATE=${{ env.PR_STATE }}"
            echo "env.PR_LOCKED=${{ env.PR_LOCKED }}"
            echo "env.PR_DRAFT=${{ env.PR_DRAFT }}"
            echo "env.PR_MERGEABLE=${{ env.PR_MERGEABLE }}"
            echo "env.PR_NUMBER=${{ env.PR_NUMBER }}"
      - name: rebase-from-master
        env:
          GIT_TRACE: true
          GITHUB_CONTEXT: ${{ toJson(github) }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
          PR_NUMBER: ${{ github.event.issue.number }}
          COMMENT_USER_LOGIN: ${{ github.event.comment.user.login }}
        run: |
           echo "${GITHUB_CONTEXT}"
            env | sort

            echo "> check if user is allowed to merge"
            comment_user_permission=$(gh api repos/"${OWNER}"/"${REPO}"/collaborators/lepapareil/permission -q .permission)
            echo "comment_user_permission=${comment_user_permission}"
            if [ "${comment_user_permission}" = "admin" ] ; then
                comment="✅ You are allowed to accept PR"
                echo "  - ${comment}"
            else
                comment="❌ Sorry ${COMMENT_USER_LOGIN}, you are not allowed to accept this PR because you do not have admin permission (your actual permission is [${comment_user_permission}])."
                echo "  - ${comment}"
                gh pr comment "${PR_NUMBER}" --body "${comment}"
                exit 1
            fi

            echo "> check if pull request is opened and ready"

            set -x
            echo "> rebase branch from master"
            git branch
            git status
            git rebase origin/"${base_ref}" && exit_code=0 || exit_code=1
            if [ ${exit_code} -eq 0 ] ; then
                comment="✅ Rebase ${GITHUB_REPOSITORY_OWNER}/${head_ref} from ${GITHUB_REPOSITORY_OWNER}/${base_ref} succeeds."
                echo "  - ${comment}"
            else
                comment="❌ Rebase ${GITHUB_REPOSITORY_OWNER}/${head_ref} from ${GITHUB_REPOSITORY_OWNER}/${base_ref} fails."
                echo "  - ${comment}"
                gh pr comment "${PR_NUMBER}" --body "${comment} Please refer to ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID} logs."
                exit ${exit_code}
            fi
            git push && exit_code=0 || exit_code=1
            if [ ${exit_code} -eq 0 ] ; then
                comment="✅ Push rebase ${GITHUB_REPOSITORY_OWNER}/${head_ref} from ${GITHUB_REPOSITORY_OWNER}/${base_ref} succeeds."
                echo "  - ${comment}"
            else
                comment="❌ Push rebase ${GITHUB_REPOSITORY_OWNER}/${head_ref} from ${GITHUB_REPOSITORY_OWNER}/${base_ref} fails."
                echo "  - ${comment}"
                gh pr comment "${PR_NUMBER}" --body "${comment} Please refer to ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID} logs."
                exit ${exit_code}
            fi

            echo "> fast-forward into master"
